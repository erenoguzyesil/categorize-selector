'use strict';const TokenType=Object.freeze({ELEMENT:0,CLASS:1,ID:2,PSEUDO_ELEMENT:3,PSEUDO_CLASS:4,ATTRIBUTE:5});class Token{constructor(a,b){this.type=a;this.lexeme=b}}
class Scanner{constructor(a){this._input=a;this._lexemeCurrentIndex=this._lexemeStartIndex=-1;this._tokens=[];this._characterToTokenType={".":TokenType.CLASS,"#":TokenType.ID}}scan(){for(;!this._isAtEnd();){this._startNewLexeme();var a=this._input.charAt(this._lexemeCurrentIndex);switch(a){case ".":case "#":for(a=this._characterToTokenType[a];this._isNextCharacterAlphaNumeric();)this._lexemeCurrentIndex+=1;this._addToken(a,this._input.substring(this._lexemeStartIndex+1,this._lexemeCurrentIndex+1));
break;case ":":a=TokenType.PSEUDO_CLASS;var b=1;do this._checkNextCharacter(":")&&(a=TokenType.PSEUDO_ELEMENT,b=2),this._lexemeCurrentIndex+=1;while(this._isNextCharacterAlphaNumeric());b=this._input.substring(this._lexemeStartIndex+b,this._lexemeCurrentIndex+1);if(a===TokenType.PSEUDO_CLASS&&b.toLowerCase().startsWith("nth")&&this._checkNextCharacter("("))for(this._lexemeCurrentIndex+=1;!this._checkNextCharacter(")")&&!this._isAtEnd();)this._lexemeCurrentIndex+=1;this._addToken(a,b);break;case "[":for(a=
{key:"",value:""};!this._checkNextCharacter("]")&&!this._isAtEnd();)this._lexemeCurrentIndex+=1,"="===this._input.charAt(this._lexemeCurrentIndex)&&(a.key=this._input.substring(this._lexemeStartIndex+1,this._lexemeCurrentIndex).trim(),this._lexemeStartIndex=this._lexemeCurrentIndex);a.value=this._input.substring(this._lexemeStartIndex+1,this._lexemeCurrentIndex+1).trim();""===a.key&&(a.key=a.value);this._addToken(TokenType.ATTRIBUTE,Object.freeze(a));break;default:if(a=this._input.charCodeAt(this._lexemeCurrentIndex),
this._isAlphaNumeric(a)){for(;this._isNextCharacterAlphaNumeric();)this._lexemeCurrentIndex+=1;this._addToken(TokenType.ELEMENT,this._input.substring(this._lexemeStartIndex,this._lexemeCurrentIndex+1))}}}}_isAtEnd(){return this._lexemeCurrentIndex+1>=this._input.length}_startNewLexeme(){this._lexemeStartIndex=this._lexemeCurrentIndex+=1}_addToken(a,b){if(a!==TokenType.ATTRIBUTE&&""===b.trim()||a===TokenType.ATTRIBUTE&&(""===b.key||""===b.value))return!1;this._tokens.push(new Token(a,b))}_checkNextCharacter(a){return this._isAtEnd()?
!1:this._input.charAt(this._lexemeCurrentIndex+1)===a}_isAlphaNumeric(a){return 47<a&&58>a||64<a&&91>a||96<a&&123>a||45===a||95===a}_isNextCharacterAlphaNumeric(){if(this._isAtEnd())return!1;let a=this._input.charCodeAt(this._lexemeCurrentIndex+1);return this._isAlphaNumeric(a)}_prettifyTokenType(a){let b=a.toString().toLowerCase();a.startsWith("PSEUDO")&&(b=b.replace("_",""),b=b.substring(0,6)+b[6].toUpperCase()+b.substring(7));return b=a.endsWith("CLASS")?b+"es":b+"s"}categorize(){this.scan();let a=
{};for(let b of Object.keys(TokenType))a[this._prettifyTokenType(b)]=[];for(let b of this._tokens)a[Object.keys(a)[b.type]].push(b.lexeme);return a}}function categorizeSelector(a){return(new Scanner(a)).categorize()}module.exports=categorizeSelector;